OPTION(STANDARD_TESTING "Test the Congo modules" OFF)

IF (STANDARD_TESTING)
    SET(CMAKE_CXX_FLAGS "-g -O0 -Wall ${CMAKE_C_FLAGS} -fprofile-arcs -ftest-coverage")
    SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fprofile-arcs -ftest-coverage")
    SET(CMAKE_CXX_OUTPUT_EXTENSION_REPLACE 1)

    FIND_PACKAGE(Boost COMPONENTS unit_test_framework REQUIRED)

    SET(
        REQUIRED_LIBRARIES
        ${Boost_UNIT_TEST_FRAMEWORK_LIBRARY}
        ${REQUIRED_LIBRARIES}
    )

    ENABLE_TESTING()

    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
    LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)

    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/example)
    LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/example)

    ADD_EXECUTABLE(BuildTest ${CMAKE_CURRENT_SOURCE_DIR}/test/congo.test.build.cpp)
    TARGET_LINK_LIBRARIES(BuildTest ${REQUIRED_LIBRARIES})
    TARGET_COMPILE_DEFINITIONS(BuildTest PRIVATE BOOST_TEST_DYN_LINK)
    ADD_TEST(TestBuild ConfigBuild)

    ADD_EXECUTABLE(QueryTest ${CMAKE_CURRENT_SOURCE_DIR}/test/congo.test.query.cpp)
    TARGET_LINK_LIBRARIES(QueryTest ${REQUIRED_LIBRARIES})
    TARGET_COMPILE_DEFINITIONS(QueryTest PRIVATE BOOST_TEST_DYN_LINK)
    ADD_TEST(TestQuery QueryTest)
ENDIF()
